This folder includes code for atomic predicates computation and reachability analysis, and datasets of Stanford network and Internet2. It includes the following sub-folders:


source code:


common: Includes parsers that convert ACLs and forwarding tables to binary decision diagrams (BDDs); and classes that implement operations of atomic predicates. In particular, BDDACLWrapper.java converts ACL and forwarding rules to BDDs; APSet.java implements atomic predicates operations such as intersection, union and complement.


jdd: the BDD library. The version included here was released in February 2012 (see jdd/Version.java). The most recent version can be found at https://bitbucket.org/vahidi/jdd/wiki/Home


i2analysis: reachability analysis of Internet2 using atomic predicates.


stanalysis: reachability analysis of Stanford network using atomic predicates.


stanalysis2: reachability analysis of Stanford network using BDDs to represent predicates without computing atomic predicates


Datasets:


i2 and st: includes forwarding rules and other rules extracted from the raw configuration files. The files with suffix ‘notcomp’ means that the forwarding tables are not compressed. The extracted rules are parsed by the BuildNetwork class in i2analysis, stanalysis and stanalysis2. For example, rule `fw 3637570304 27 xe-1/0/3.10` is explained as follows: the first token `fw` indicates it is a forwarding rule, the second token is the numerical representation of an IPv4 address, the third token is the prefix length, and the fourth token is the port name.


stconfig: includes the raw configuration files of Stanford network. Only ACL rules are read and parsed by the BuildNetwork class in stanalysis and stanalysis2

